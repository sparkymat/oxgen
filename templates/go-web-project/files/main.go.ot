package main

func main() {
	cfg, err := config.New()
	if err != nil {
		panic(err)
	}

	dbDriver, err := database.New(cfg.DatabaseURL())
	if err != nil {
		log.Error(err)
		panic(err)
	}

	if err = dbDriver.AutoMigrate(); err != nil {
		log.Error(err)
		panic(err)
	}

	// Initialize web server
	dbxProvider := dbx.New(dbDriver.DB())

	asynqClient := asynq.NewClient(asynq.RedisClientOpt{Addr: cfg.RedisURL()})
	defer asynqClient.Close()

	userService := user.New(dbxProvider)


	services := internal.Services{
		User:  userService,
	}

	e := echo.New()
	route.Setup(e, cfg, services)

	// Setup scheduler
	scheduler := gocron.NewScheduler(time.UTC)
	scheduler.StartAsync()

	e.Logger.Panic(e.Start(":8080"))
}
